Installons maintenant lâ€™environnement graphique
===============================================
Nous attaquons donc la partie la plus intÃ©ressante, lâ€™installation de lâ€™environnement graphique. Il y a des Ã©tapes communes Ã  tous les environnements. Un peu plus loin est indiquÃ©e la partie concernant **uniquement** Gnome.

Une fois le systÃ¨me dÃ©marrÃ©, on se connecte **en root**. Ã‰tant donnÃ© que jâ€™ai installÃ© NetworkManager (ou wicd selon les goÃ»ts) Ã  lâ€™Ã©tape prÃ©cÃ©dente, le rÃ©seau fonctionne directement. Jâ€™ajoute ntp (synchronisation de lâ€™heure en rÃ©seau) et cronie (pour les tÃ¢ches dâ€™administration Ã  automatiser).

::

$ pacman -Syy ntp cronie

.. note::
    si on veut avoir les logs en clair en cas de problÃ¨me, il faut modifier avec nano (ou vim) le fichier :guilabel:`/etc/systemd/journald.conf` en remplaÃ§ant la ligneÂ ::

    #ForwardToSyslog=no

    parÂ ::

      ForwardToSyslog=yes

Les outils en place, on lance alsamixer avec la commande du mÃªme nom, pour configurer le niveau sonoreÂ :

.. image:: ../pictures/008.png
*Illustration 8: alsamixer en action*

Une fois lâ€™ensemble configurÃ©, pour le conserver tel quel, il suffit dâ€™entrerÂ ::

  $ alsactl store

Nous sommes dans le multimÃ©diaÂ ? Restons-y.

On va installer lâ€™ensemble des greffons gstreamer qui nous donneront accÃ¨s aux fichiers multimÃ©dias une fois Gnome lancÃ©. Il faudra remplacer **pacman -S** par **sudo pacman -S** quand vous utiliserez votre compte utilisateur Â«Â normalÂ Â» plus tard.

Pour lâ€™exÃ©cution de la ligne suivante, il est demandÃ© de choisir un support pour OpenGL. Pour le moment, on choisit MesaGL. La modification correspondant Ã  votre matÃ©riel sera faite lors de lâ€™installation de Xorg. Ainsi que la version Â«Â libx264Â Â» proposÃ© en premier choix. Merci Ã  Adrien de Linuxtricks pour mâ€™avoir aidÃ© Ã  rÃ©duire la longueur de la ligne de commandeÂ ğŸ™‚

::

  $ pacman -S gst-plugins-{base,good,bad,ugly} gst-libav

gst-libavÂ ? Il prend en charge tout ce qui est x264 et apparentÃ©.

Passons Ã  lâ€™installation de Xorg. Le paquet xf86-input-evdev est obsolÃ¨te depuis dÃ©but mars 2017, Ã  cause du passage Ã  xorg-server 1.19.

.. note::
    il nâ€™y a pas dâ€™espace entre le â€“ et le { vers la fin de la commande suivante.

::

    $ pacman -S xorg-{server,xinit,apps} xf86-input-{mouse,keyboard} xdg-user-dirs

Si on utilise un ordinateur portable avec un pavÃ© tactile, il faut rajouter le paquet xf86-input-synaptics ou **de prÃ©fÃ©rence** xf86-input-libinput.

Il faut ensuite choisir le pilote pour le circuit vidÃ©o. Voici les principaux pilotes, sachant que le paquet xf86-video-vesa englobe une Ã©norme partie des circuits graphiques, dont ceux non listÃ©s dans le tableau un peu plus loin. En cas de douteÂ : https://wiki.archlinux.org/index.php/Xorg#Driver_installation

Pour Nvidia, câ€™est un casse-tÃªte au niveau des pilotes propriÃ©taires. Le plus simple est de se rÃ©fÃ©rer au wiki d'ArchlinuxÂ : https://wiki.archlinux.org/index.php/NVIDIA. Et si vous avez la technologie Optimus : https://wiki.archlinux.org/index.php/NVIDIA_Optimus

 +---------------------+--------------------+------------------------------------------------------+
 | Circuits graphiques | Pilotes libres     | Pilotes non libres (si existant)                     |
 +---------------------+--------------------+------------------------------------------------------+
 | AMD                 | xf86-video-ati     |                                                      |
 +---------------------+--------------------+------------------------------------------------------+
 | Intel               | xf86-video-intel   |                                                      |
 +---------------------+--------------------+------------------------------------------------------+
 | Nvidia              | xf86-video-nouveau | | Nvidia (cf le wiki d'archlinux) pour la version Ã   |
 |                     |                    | | installer en fonction de la carte graphique        |
 +---------------------+--------------------+------------------------------------------------------+

Dans le cas dâ€™une machine virtuelle, jâ€™ai utilisÃ© le paquet **xf86-video-vesa**. On passe ensuite Ã  lâ€™installation des polices. Voici la ligne de commande pour les principales. Le paquet freetype2 apportant quelques amÃ©liorations. Merci Ã  Angristan pour la suggestion.

::

  $ pacman -S ttf-{bitstream-vera,liberation,freefont,dejavu} freetype2

.. note::
    pour les polices Microsoft, le paquet ttf-ms-fonts, elles sont sur le dÃ©pÃ´t AUR, donc il faut utiliser yaourt pour les rÃ©cupÃ©rer et les installer.

Si vous faites une installation dans VirtualBox, il faut deux paquets. En plus de xf86-video-vesa, il faut le paquet virtualbox-guest-utils. Cependant, il y a deux choix qui arrivent pour ce paquet.

Ce qui donneÂ ::

  $ pacman -S xf86-video-vesa
  $ pacman -S virtualbox-guest-utils

.. image:: ../pictures/009.png
*Illustration 9: Choix du paquet Ã  installer concernant virtualbox-guest-utils*

Le premier nÃ©cessite le paquet linux-headers (ou linux-lts-headers), le deuxiÃ¨me propose les modules noyaux dÃ©jÃ  prÃ©compilÃ©s. **On choisit donc la deuxiÃ¨me option.**

.. note::
    si vous avez dÃ©cidÃ© dâ€™installer le noyau lts, il faut installer les paquets linux-lts-headers et virtualbox-guest-dkms. Il nâ€™y a plus de modules prÃ©compilÃ©s pour le noyau linux-lts

La prise en charge des modules noyau se fait avec la commande systemctl suivanteÂ ::

  $ systemctl enable vboxservice

.. note::
    si vous installez un jour VirtualBox sur une machine rÃ©elle je vous renvoie Ã  cette page du wiki francophoneÂ : https://wiki.archlinux.fr/VirtualBox

On va rajouter quelques outils, histoire de ne pas voir un environnement vide au premier dÃ©marrage.

On commence par tout ce qui est graphiqueÂ : gimp, cups (gestion de lâ€™imprimante) et hplip (si vous avez une imprimante scanner Hewlett Packard). Le paquet python-pyqt5 est indispensable pour lâ€™interface graphique de HPLIPÂ ::

  $ pacman -S cups gimp gimp-help-fr hplip python-pyqt5

La sÃ©rie des paquets foomatic permet dâ€™avoir le maximum de pilotes pour lâ€™imprimante. Pour Ãªtre tranquille avec son imprimanteÂ ::

  $ pacman -S foomatic-{db,db-ppds,db-gutenprint-ppds,db-nonfree,db-nonfree-ppds} gutenprint

Il y a deux versions supportÃ©s par Archlinux pour LibreOffice, en conformitÃ© avec ce que propose la Document Foundation. Pour la version **stable** et les utilisateurs **prudents**, on utilise la ligne de commande (hunspell ajoute la vÃ©rification orthographique)Â ::

  $ pacman -S libreoffice-still-fr hunspell-fr

Pour les utilisateurs plus **aventureux**, qui veulent la version rÃ©centeÂ ::

  $ pacman -S libreoffice-fresh-fr hunspell-fr

On rajoute ensuite Mozilla Firefox en franÃ§aisÂ ::

  $ pacman -S firefox-i18n-fr

Vous prÃ©fÃ©rez ChromiumÂ ?

::

  $ pacman -S chromium

On crÃ©e un utilisateur avec la commande suivante, qui sera indispensable pour appliquer un des addenda si vous ne voulez pas utiliser Gnome.

::

  $ useradd -m -g wheel -c 'Nom complet de lâ€™utilisateur' -s /bin/bash nom-de-lâ€™utilisateur (sur une seule ligneÂ !)
  $ passwd nom-de-lâ€™utilisateur

Avant de finir, on va configurer sudo en utilisant visudo. En effet, il nous suffit de modifier une ligne pour que lâ€™on puisse accÃ©der en tant quâ€™utilisateur classique aux droits complets sur la machine de maniÃ¨re temporaire.

Il faut aller, en utilisant la flÃ¨che du bas jusquâ€™Ã  la ligneÂ ::

  #Uncomment to allow members of group wheel to execute any command

Et enlever le \# sur la ligne qui suit. (La sÃ©quence de touches Â«Â Ã‰chap : w et qÂ Â» permet de converser la modification dans vi.)